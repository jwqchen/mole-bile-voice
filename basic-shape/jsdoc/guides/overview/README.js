Ext.data.JsonP.overview({"guide":"<h1 id='overview-section-overview-and-concepts'>Overview and Concepts</h1>\n\n<p>The purpose of <strong>Draw2D</strong> is to visualize and edit graphs, flow-charts and networks. It almost goes without saying that you should be able to add and delete nodes, move nodes about, create connections between nodes and more.</p>\n\n<p>Draw2D is high reusability and be customizable by injection edit policies.\nThis section introduces the main concepts and components.</p>\n\n<p>A <code><a href=\"#!/api/draw2d.Canvas\" rel=\"draw2d.Canvas\" class=\"docClass\">draw2d.Canvas</a></code> contains a collection of nodes and connections:</p>\n\n<p><p><img src=\"guides/overview/canvas.png\" alt=\"Diagram in draw2d\" width=\"451\" height=\"263\"></p></p>\n\n<p>The <code><a href=\"#!/api/draw2d.shape.node.Node\" rel=\"draw2d.shape.node.Node\" class=\"docClass\">draw2d.shape.node.Node</a></code> are the primary components:</p>\n\n<p><p><img src=\"guides/overview/nodes.png\" alt=\"nodes in draw2d\" width=\"451\" height=\"263\"></p></p>\n\n<p>Nodes are linked to each other by a <code><a href=\"#!/api/draw2d.Connection\" rel=\"draw2d.Connection\" class=\"docClass\">draw2d.Connection</a></code></p>\n\n<p><p><img src=\"guides/overview/connections.png\" alt=\"connections in draw2d\" width=\"451\" height=\"263\"></p></p>\n\n<p>A <code><a href=\"#!/api/draw2d.Port\" rel=\"draw2d.Port\" class=\"docClass\">draw2d.Port</a></code> is the anchor point of a node to which connections can be attached</p>\n\n<p><p><img src=\"guides/overview/ports.png\" alt=\"connections in draw2d\" width=\"451\" height=\"263\"></p></p>\n\n<p>A node may have one or more ports. Each connection has two end-points each of which be anchored to a port. However when the user is dragging out a new connection only one of the end-points is anchored to a port and the other is fixed to the mouse cursor's current position.</p>\n\n<p>The canvas itself places no constraints on the directionality of connections, however it does label the ends of a connection as source and target, but the meanings of these labels are defined by the application</p>\n\n<p>Nodes, ports and connections are all fully skinnable using <a href=\"#!/api/draw2d.Figure-method-setCssClass\" rel=\"draw2d.Figure-method-setCssClass\" class=\"docClass\">CSS</a> , user defined SVG and <a href=\"#!/api/draw2d.shape.basic.Rectangle-method-setColor\" rel=\"draw2d.shape.basic.Rectangle-method-setColor\" class=\"docClass\">style API</a>. In fact there is a default graphical representation for any of them and draw2d contains a set of pre defined figures.</p>\n","title":"Overview"});