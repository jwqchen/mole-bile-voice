Ext.data.JsonP.nodes({"guide":"<h1 id='nodes-section-nodes'>Nodes</h1>\n\n<p>Nodes are graphical objects that can be arranged in a diagram page. These nodes can\nbe added to the diagram page either programmatically, via JSON or during run time or by <a href=\"#!/example/buildin_commandstack\">dragging them from a palette</a></p>\n\n<p>The nodes can be one of the predefined figures provided or by inherit an existing one and override the <a href=\"#!/api/draw2d.Figure-method-createShapeElement\" rel=\"draw2d.Figure-method-createShapeElement\" class=\"docClass\">createShapeElement</a> method.</p>\n\n<p>You can also design these shapes using a <a href=\"https://www.draw2d.org/designer/\" target=\"_blank\">symbol designer</a> utility (source code included in the download package).</p>\n\n<h3 id='nodes-section-adding-a-node-via-api-call'>Adding a node via API call</h3>\n\n<pre class='inline-example small frame'><code>// create a simple rectangle\n //\n var rect =  new <a href=\"#!/api/draw2d.shape.basic.Rectangle\" rel=\"draw2d.shape.basic.Rectangle\" class=\"docClass\">draw2d.shape.basic.Rectangle</a>();\n\n // and add this to the draw2d canvas\n //\n canvas.add(rect,100,10);\n</code></pre>\n\n<h3 id='nodes-section-adding-a-node-via-json-import'>Adding a node via JSON import</h3>\n\n<pre class='inline-example small frame'><code>// the json document to import. a JSON document can contain more than one node\n // and connections\n var json = [\n {\n    \"type\": \"<a href=\"#!/api/draw2d.shape.basic.Rectangle\" rel=\"draw2d.shape.basic.Rectangle\" class=\"docClass\">draw2d.shape.basic.Rectangle</a>\",\n    \"x\": 100,\n    \"y\": 10,\n    \"width\": 50,\n    \"height\": 50,\n    \"radius\": 2\n  }\n ]\n // unmarshal the JSON document into the canvas\n // (load)\n var reader = new <a href=\"#!/api/draw2d.io.json.Reader\" rel=\"draw2d.io.json.Reader\" class=\"docClass\">draw2d.io.json.Reader</a>();\n reader.unmarshal(canvas, json);\n</code></pre>\n\n<h3 id='nodes-section-composing-nodes'>Composing nodes</h3>\n\n<p>Figures can be composed via a parent-child relationship. Every figure has a rectangular bounds inside which it, and its children, paint. A <code><a href=\"#!/api/draw2d.layout.locator.Locator\" rel=\"draw2d.layout.locator.Locator\" class=\"docClass\">draw2d.layout.locator.Locator</a></code> must be used to place children.</p>\n\n<pre class='inline-example small frame'><code>// create a simple rectangle\n //\n var rect =  new <a href=\"#!/api/draw2d.shape.basic.Rectangle\" rel=\"draw2d.shape.basic.Rectangle\" class=\"docClass\">draw2d.shape.basic.Rectangle</a>(100,80);\n\n // add a child to the rectangle\n rect.add(new <a href=\"#!/api/draw2d.shape.basic.Label\" rel=\"draw2d.shape.basic.Label\" class=\"docClass\">draw2d.shape.basic.Label</a>(\"Label\"), new <a href=\"#!/api/draw2d.layout.locator.CenterLocator\" rel=\"draw2d.layout.locator.CenterLocator\" class=\"docClass\">draw2d.layout.locator.CenterLocator</a>(rect));\n\n // and add this to the draw2d canvas\n //\n canvas.add(rect,100,10);\n</code></pre>\n","title":"Nodes"});