Ext.data.JsonP.ports({"guide":"<h1 id='ports-section-ports'>Ports</h1>\n\n<p>A port is an object that is used to establish a connection between a node and\na connector. The connection port can be placed with a <code><a href=\"#!/api/draw2d.layout.locator.PortLocator\" rel=\"draw2d.layout.locator.PortLocator\" class=\"docClass\">draw2d.layout.locator.PortLocator</a></code> anywhere within a node or at the edge of one.</p>\n\n<h3 id='ports-section-adding-a-port-to-a-node-via-external-api-call'>Adding a port to a node via external API call</h3>\n\n<p>It is possible to add ports during runtime to any kind of node. Below is a simple example\nhow to do this. The disadvantage of this method is, that the ports are not restored if the\nshape is saved via the JSON-Writer/Reader.</p>\n\n<pre class='inline-example small frame'><code>// create a simple rectangle\n //\n var rect =  new <a href=\"#!/api/draw2d.shape.basic.Rectangle\" rel=\"draw2d.shape.basic.Rectangle\" class=\"docClass\">draw2d.shape.basic.Rectangle</a>(50,80);\n\n // a locator is responsible to calculate the position of an\n // port.\n var leftLocator  = new <a href=\"#!/api/draw2d.layout.locator.InputPortLocator\" rel=\"draw2d.layout.locator.InputPortLocator\" class=\"docClass\">draw2d.layout.locator.InputPortLocator</a>();\n var rightLocator = new <a href=\"#!/api/draw2d.layout.locator.OutputPortLocator\" rel=\"draw2d.layout.locator.OutputPortLocator\" class=\"docClass\">draw2d.layout.locator.OutputPortLocator</a>();\n\n // create a port of the type \"hybrid\" with the given locator\n // possible port types are: input, output and hybrid\n //\n rect.createPort(\"hybrid\",leftLocator);\n rect.createPort(\"hybrid\",leftLocator);\n rect.createPort(\"hybrid\",rightLocator);\n\n // and add this to the draw2d canvas\n //\n canvas.add(rect,100,10);\n</code></pre>\n\n<h3 id='ports-section-create-a-new-figure-and-add-the-ports-in-the-constructor'>Create a new figure and add the ports in the constructor</h3>\n\n<p>The prefered way is to create a new shape with all attributes and add the ports in the <code>init</code> method. Now the JSON reader creates the shape and everything is setup well.</p>\n\n<pre class='inline-example small frame'><code>var LEFT_LOCATOR  = new <a href=\"#!/api/draw2d.layout.locator.InputPortLocator\" rel=\"draw2d.layout.locator.InputPortLocator\" class=\"docClass\">draw2d.layout.locator.InputPortLocator</a>();\n var RIGHT_LOCATOR = new <a href=\"#!/api/draw2d.layout.locator.OutputPortLocator\" rel=\"draw2d.layout.locator.OutputPortLocator\" class=\"docClass\">draw2d.layout.locator.OutputPortLocator</a>();\n\n\n var MyShape = draw2d.shape.basic.Rectangle.extend({\n\n    NAME : \"MyShape\",   // required for JSON I/O\n\n    init : function()\n    {\n        this._super(50,80);\n\n        this.createPort(\"output\", RIGHT_LOCATOR);\n        this.createPort(\"input\", LEFT_LOCATOR);\n        this.createPort(\"input\", LEFT_LOCATOR);\n    }\n });\n\n // create my special shape\n //\n var shape =  new MyShape();\n\n // and add this to the draw2d canvas\n //\n canvas.add(shape,100,10);\n</code></pre>\n","title":"Ports"});